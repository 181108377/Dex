<!DOCTYPE html>
<meta charset="utf-8">
<style>
  html,body {
    height : 100%;
    min-height : 100%;
    width : 100%;
    min-width : 100%;
  }
  
  layout {
    height : 100%;
    width : 100%;
  }
  
  #ChartArea {
    height : 100%;
    width : 100%;
  }
<%
  println new File("javascript/wui/latest/w2ui-1.4.3.min.css").text
%>
</style>
<html>
  <head>
    <title>WUI: Layout</title>
  </head>
  <body>
  <div id="config" style="visibility: hidden">
  </div>
  <div id="layout" style="width: 100%; height: 100%;"></div>
<script>
<%
  println new File("javascript/jquery/latest/jquery-2.1.3.min.js").text
  println new File("javascript/wui/latest/w2ui-1.4.3.min.js").text
  println new File("javascript/underscore/latest/underscore-min.js").text
  println new File("javascript/d3/latest/d3.min.js").text
  println new File("javascript/dexjs/latest/dex.js").text
  println new File("javascript/dexjs/latest/charts/d3/Chord.js").text
%>
</script>
<script>
<%
  def header = "[" + dexData.header.collect { return "\"$it\"" }.join(',') + "]"
  def data = []
  dexData.data.eachWithIndex
  {
    row, ri ->
    data << "[" + row.collect { return "\"$it\"" }.join(',') + "]"
  }
  println "var csv = { 'header' : $header,\n 'data' : [" + data.join(',\n') + "] };";

  print "var form = '<div class=\"w2ui-field\"><label>Relationships:</label>" +
    "<div><input id=\"enum\"> </div></div>';"
%>

</script>
<script type="text/javascript">
\$(function () {
  var pstyle = 'border: 1px solid #dfdfdf; padding: 5px;';
  \$('#layout').w2layout({
    name: 'layout',
    panels: [
      { type: 'top', size: 50,   resizable: true, style: pstyle,
        content: 'TOOLBAR' },
      { type: 'left', size: 200, resizable: true, style: pstyle,
        content: form },
      { type: 'main', style: pstyle, content: '<svg id="ChartArea"></svg>' }
    ]
  });

  \$('#enum').w2field('enum', { 
    items: csv.header,
    openOnFocus: true
  });

  w2ui['layout'].on('resize', function (event) {
    chord.resize();
  });

function setConfiguration(config)
{
  dex.console.log("Configuration", config);
  chord.config = dex.config.expandAndOverlay(config, chord.config);
  save('#config', config);
  chord.update();
}

function load(location) {
  var config = {};

  \$(location + " div").each(function(i) {
    dex.console.log("Loading Setting: '" + \$(this).attr('id') + "'='" +
      \$(this).attr('value') + "'"); 
    config[\$(this).attr('id')] = \$(this).attr('value');
  });

  dex.console.log("Loaded Configuration:", config);
  return config;
}

function save(location, config) {
  dex.console.log("Saving Configuration To: " + location, config);
  \$(location).children().remove();
  _.keys(config).forEach(function (key) {
    \$(location).append("<div id='" + key + "' value='" + config[key] + "'></div>");
  });
}

var config = dex.config.expandAndOverlay({
  parent : "#ChartArea",
  resizable : true,
  width : 100,
  height : 100,
  color : d3.scale.category20c(),
  csv : csv }, load("#config"));

var chord = new dex.charts.d3.Chord(config);

chord.render();

});

</script>
</body>
</html>