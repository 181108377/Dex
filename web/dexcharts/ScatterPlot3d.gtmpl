<!DOCTYPE html>
<meta charset="utf-8">
<html>
  <head>
    <title>DexCharts : ScatterPlot 3D</title>
  </head>
<style>
    html,body{
    height:100%;
    min-height: 100%;
    width="100%";
    min-width="100%"
  }
</style>
  <!-- raf.js -->
  <script src="http://dexvis.com/three/latest/build/raf.js"></script>

</head>

  <body>
  <script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
  <script src="http://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js"></script>
  <script src="http://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
  <script src="http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script>
  <script src="http://cdnjs.cloudflare.com/ajax/libs/three.js/r61/three.min.js"></script>
<script>
<%
  println new File("javascript/dexjs/latest/dex.js").text
  println new File("javascript/dexjs/latest/charts/threejs/ScatterPlot.js").text
%>
</script>

<body>
<h3>DexCharts : Scatterplot 3D</h3>
<div id='scatter3d' height="100%" width="100%"></div>
<script type="x-shader/x-vertex" id="vertexshader">
uniform float amplitude;
attribute float size;
attribute vec3 customColor;

varying vec3 vColor;

void main()
{
  vColor = customColor;
  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );

  //gl_PointSize = size;
  gl_PointSize = size * ( 300.0 / length( mvPosition.xyz ) );

  gl_Position = projectionMatrix * mvPosition;
}


</script>

<script type="x-shader/x-fragment" id="fragmentshader">
uniform vec3 color;
uniform sampler2D texture;

varying vec3 vColor;

void main()
{
  gl_FragColor = vec4( color * vColor, 1.0 );
  gl_FragColor = gl_FragColor * texture2D( texture, gl_PointCoord );
}


</script>
<script>

<%
  def header = "[" + dexData.header.collect { return "\"$it\"" }.join(',') + "]"
  def data = []
  dexData.data.eachWithIndex
  {
    row, ri ->
    data << "[" + row.collect { return "\"$it\"" }.join(',') + "]"
  }
  println "var csv = { 'header' : $header,\n 'data' : [" + data.join(',\n') + "] };";
%>

  var scatterParent = document.getElementById('scatter3d');

  var ncsv = dex.csv.numericSubset(csv);

  dex.console.log(ncsv);

  var scatterplot = dex.charts.threejs.ScatterPlot({
    'parent' : scatterParent,
    'csv'    : ncsv
  });

  scatterplot.render();

</script>
</body>
</html>
