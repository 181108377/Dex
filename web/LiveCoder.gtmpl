<!DOCTYPE html>
<% import com.dexvis.util.DexUtil %>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8">
    <title>Live Coder</title>

<style type="text/css">
  <% println new File("web/d3/d3.css").text %>
  <% println new File("javascript/codemirror/latest/lib/codemirror.css").text %>
</style>

<script type="text/javascript">
<% println new File("javascript/d3/latest/d3.min.js").text %>
<% println new File("javascript/codemirror/latest/lib/codemirror.js").text %>
<% println new File("javascript/codemirror/latest/lib/util/simple-hint.js").text %>
<% println new File("javascript/codemirror/latest/lib/util/javascript-hint.js").text %>
<% println new File("javascript/codemirror/latest/lib/util/dialog.js").text %>
<% println new File("javascript/codemirror/latest/lib/util/searchcursor.js").text %>
<% println new File("javascript/codemirror/latest/lib/util/search.js").text %>
<% println new File("javascript/codemirror/latest/mode/javascript/javascript.js").text %>
<% println new File("javascript/codemirror/latest/lib/util/searchcursor.js").text %>
<% println new File("javascript/codemirror/latest/lib/util/match-highlighter.js").text %>
</script>

<style type="text/css">
  <% println new File("javascript/codemirror/latest/lib/util/simple-hint.css").text %>
  <% println new File("javascript/codemirror/latest/lib/util/dialog.css").text %>
    
  .CodeMirror {border-top: 1px solid black; border-bottom: 1px solid black; height: auto;}
  .CodeMirror-gutter {min-width: 2.6em; cursor: pointer;}

  .CodeMirror-matchhighlight { background: #e9e9e9 }
  .CodeMirror-focused span.CodeMirror-matchhighlight { background: #e7e4ff; !important }
  .CodeMirror { float: left; width: 40%; border: 1px solid black; }
  .CodeMirror-scroll { overflow-y: hidden;  overflow-x: auto; }
  .activeline {background: #ccf2ff !important;}
  #chart { border: 1px; float: right; }
</style>

<script type="text/javascript">
var jsonData;

<%
  println "var dexHeader = [ " + header.collect{"\"$it\""}.join(",") + "];"
  println "var dexData = ["

  def rows = []
  data.eachWithIndex
  {
    row, ri ->
    rows << "  [" + row.collect{"\"$it\""}.join(",") + "]"
  }

  println rows.join(",\n") + "];"
%>

var width = 800,
    height = 800,
    fontSize = 12;
</script>

</head>
<body>
  <h1 id="titletext">Live Coder</h1>

<textarea id="code" name="code">
  var svg = d3.select("#chart")
  .append("svg:svg")
  .attr("width", 200)
  .attr("height", 200)
  .style("border", 1);

var selection = svg.selectAll("rect")
  .data([127, 61, 256, 71])

selection.enter().append("rect")
  .attr("x", 200)
  .attr("y", 200)
  .attr("width", 10)
  .attr("height", 10)
  .style("fill", "red")

selection
  .transition()
  .duration(3000)
    .attr("x", 0)
    .attr("y", function(d,i) { return i*90+50 })
    .attr("width", function(d,i) { return d; })
    .attr("height", 20)
    .style("fill", "steelblue")
    .transition()
    .duration(3000)
    .delay(3000)
      .style("fill", "green")
      .attr("width", function(d,i) {
          return d*1.5;
        })

selection.exit()
  .attr("opacity", 1)
  .transition()
  .duration(3000)
    .attr("opacity", 0)
    .remove();
</textarea>

<div id="chart"></div>

    <script type="text/javascript">
<%
  println """

  CodeMirror.commands.autocomplete = function(cm) {
      CodeMirror.simpleHint(cm, CodeMirror.javascriptHint);
  }

  var delay;

  // Hack: CodeMirror creates this dynamically.  When I save as html and reload, I have to
  // Delete the previous node in order to avoid getting duplicates.
  d3.select("div.CodeMirror.cm-s-default").remove();

  var editor = CodeMirror.fromTextArea(document.getElementById("code"), {
    lineNumbers: true,
    lineWrapping: true,
    matchBrackets: true,
    indentUnit: 2,
    tabSize: 4,
    indentWithTabs: false,
    electricChars : true,
    mode: 'text/javascript',
    undoDepth: 100,
    extraKeys: { "Ctrl-Space": "autocomplete" }
  });

  editor.on("change", function() {
    clearTimeout(delay);
    delay = setTimeout(updatePreview, 300);
  });

  var hlLine = editor.setLineClass(0, "activeline");

  editor.on("cursorActivity", function() {
    d3.select("#code").html(editor.getValue());
    editor.setLineClass(hlLine, null, null);
    hlLine = editor.setLineClass(editor.getCursor().line, null, "activeline");
  });
  
  function updatePreview()
  {
    d3.selectAll("svg").remove();
    eval(editor.getValue());
  }
  setTimeout(updatePreview, 300);
"""
%>
</script>
  </body>
</html>
