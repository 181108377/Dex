<!DOCTYPE html>
<meta charset="utf-8">

<style>

        text {
            font: 12px sans-serif;
        }
        svg {
            display: block;
        }
        html, body, #chart, svg {
            margin: 0px;
            padding: 0px;
            height: 100%;
            width: 100%;
        }

<% println new File("javascript/nvd3/latest/nv.d3.min.css").text %>

</style>

<body>

  <div id="chart">
    <svg></svg>
  </div>

<script>
<%
  println new File("javascript/d3/latest/d3.min.js").text
  println new File("javascript/nvd3/latest/nv.d3.min.js").text
  println new File("javascript/nvd3/latest/examples/lib/stream_layers.js").text
  println new File("javascript/dexjs/latest/dex.js").text
%>
</script>

<script type="text/javascript">

// [ { key: 'columnname', values: [ { x: x, y: y }, ... ] },
//   ...


<%
  def numericColumns = dexData.getNumericColumns()
  colMap = dexData.getColumnMap()
  def seriesList = []

  def xData = colMap[numericColumns[0]];

  for (int i=1; i<numericColumns.size(); i++)
  {
    def rows = [];

    def yData = colMap[numericColumns[i]]
    
    yData.eachWithIndex
    {
      y, yi ->
      rows << "{ x: " + xData[yi] + ", y: " + yData[yi] + "}"
    }
    
    seriesList << "{ key: \"" + numericColumns[i] + "\", values: [" + rows.join(",") + "]}"
  }

  println "var xLabel = \"${numericColumns[0]}\";\n"
  println "var chartData = [ " + seriesList.join(",") + "];"
%>

dex.console.log("Chart Data", chartData);

var chart;
nv.addGraph(function() {
  chart = nv.models.multiBarChart()
    //.barColor(d3.scale.category20().range())
    .duration(300)
    .margin({bottom: 100, left: 100, top: 150})
    .showControls(true)
    //.rotateLabels(90)
    .groupSpacing(0)
  ;

  chart.reduceXTicks(true).staggerLabels(false);

  chart.xAxis
    .axisLabel(xLabel)
    .axisLabelDistance(35)
    .showMaxMin(false)
    //.tickFormat(d3.format(',.0f'))
  ;

  chart.yAxis
//    .axisLabel("Y-Axis")
    .axisLabelDistance(-5)
    //.tickFormat(d3.format(',.0f'))
  ;

dex.console.log("DATA", chartData);
  d3.select('#chart svg')
    .datum(chartData)
    .call(chart);

  nv.utils.windowResize(chart.update);

  return chart;
});


</script>
